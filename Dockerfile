FROM ubuntu:22.04

# 0. Set up image environment
WORKDIR /var/canvas
RUN adduser --disabled-password --gecos canvas --uid 1001 canvasuser \
  && chown -R canvasuser:canvasuser /var/canvas
ENV RAILS_ENV=production
ENV JS_BUILD_NO_FALLBACK=1
ENV COMPILE_ASSETS_STYLEGUIDE=0
ENV COMPILE_ASSETS_API_DOCS=0
ENV COMPILE_ASSETS_BRAND_CONFIGS=0
# 0-1. Set up locales
RUN apt-get update && apt-get install -y locales \
  && sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
# 0-2. Set up timezone info
ENV TIME_ZONE=Asia/Taipei
ARG DEBIAN_FRONTEND=noninteractive

ARG NODE_VERSION=16
ARG YARN_VERSION=1.19.1
ARG PASSENGER_VERSION=6.0.19
ARG RUBY_VERSION=3.1
ARG BUNDLER_VERSION=2.3.26

ARG APT_PPA_DEPS="git tzdata curl software-properties-common"
ARG APT_PY_DEPS="python-is-python3 python3-lxml python3-pygments"
ARG APT_GEM_DEPS="automake build-essential libpq-dev libidn-dev libxmlsec1-dev"

RUN ln -snf /usr/share/zoneinfo/$TIME_ZONE /etc/localtime && echo $TIME_ZONE > /etc/timezone

# 1. Dependency Installation
RUN apt-get install -y ${APT_PPA_DEPS} \
  && add-apt-repository ppa:instructure/ruby \
  && apt-get update
# Install Ruby
RUN apt-get install -y ruby${RUBY_VERSION} ruby${RUBY_VERSION}-dev
# Install Node.js
RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
  && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_VERSION.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
  && apt-get update \
  && apt-get install -y nodejs
# Install bundler
RUN gem install bundler:${BUNDLER_VERSION}
# Yarn Installation
RUN npm i -g yarn@$YARN_VERION
# Install Python
RUN apt-get install -y ${APT_PY_DEPS}

# 2. Passenger Configuration
# RUN gem install passenger:$PASSENGER_VERSION
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7 \
  && apt-get install -y apt-transport-https \
  && sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger jammy main > /etc/apt/sources.list.d/passenger.list' \
  && apt-get update \
  && apt-get install -y passenger=1:${PASSENGER_VERSION}-1~jammy1

# 3. Copy Files
USER canvasuser:canvasuser
COPY --chown=canvasuser:canvasuser . .
RUN mkdir -p .yardoc \
  node_modules \
  client_apps/canvas_quizzes/dist \
  client_apps/canvas_quizzes/node_modules \
  client_apps/canvas_quizzes/tmp \
  gems/canvas_i18nliner/node_modules \
  packages/canvas-media/es \
  packages/canvas-media/lib \
  packages/canvas-media/node_modules \
  packages/canvas-planner/es \
  packages/canvas-planner/lib \
  packages/canvas-planner/node_modules \
  packages/canvas-rce/es \
  packages/canvas-rce/canvas \
  packages/canvas-rce/lib \
  packages/canvas-rce/node_modules \
  packages/jest-moxios-utils/node_modules \
  packages/js-utils/es \
  packages/js-utils/lib \
  packages/js-utils/node_modules \
  packages/k5uploader/es \
  packages/k5uploader/lib \
  packages/k5uploader/node_modules \
  packages/old-copy-of-react-14-that-is-just-here-so-if-analytics-is-checked-out-it-doesnt-change-yarn.lock/node_modules \
  public/dist \
  public/doc/api \
  public/javascripts/client_apps \
  public/plugins \
  && ln -sf ./gems/plugins/analytics/public ./public/plugins/analytics \
  && chmod +x /var/canvas/vendor/QTIMigrationTool/migrate.py
  # TODO: write a script to generate necessary config files

# 4. Generate Assets
RUN mkdir -p log tmp/pids public/assets app/stylesheets/brandable_css_brands \
  && touch app/stylesheets/_brandable_variables_defaults_autogenerated.scss \
  && touch log/production.log

# 5. bundle _2.3.26_ install and yarn install
USER root:root
RUN apt-get install -y ${APT_GEM_DEPS}
USER canvasuser:canvasuser
RUN  bundle _2.3.26_ config set --local path 'vendor/bundle' \
  && bundle _2.3.26_ config --local without 'pulsar' \
  && bundle _2.3.26_ install -j1
RUN yarn install --network-concurrency 1
# Compile
RUN bundle exec rake canvas:compile_assets --trace

# TODO: should execute script to generate config files first
CMD passenger start
